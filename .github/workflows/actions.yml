# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

jobs:
  frontend:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env:
        CI: true
        MYSQL_TEST_USER: zoutigo
        MYSQL_TEST_PASSWORD: valery54
        MYSQL_TEST_DATABASE: hotels
        MYSQL_TEST_HOST: 127.0.0.1 
        TOKEN_SECRET: ilnefautpasallersuelalachasse
        TOKEN_LOGIN_DURATION: 1d

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # install dependencies backend dependencies
    - run: npm install --force
    # install dependencies frontend dependencies
    - run: cd ./frontend && npm install --force
    # Buid React app
    - run: cd ./frontend && npm run build

  backend:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
     
 
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # Setup mysql
    - uses: actions/checkout@v3
    - uses: shogo82148/actions-setup-mysql@v1
      with:
       mysql-version: '5.7'
       user: ${env.MYSQL_TEST_USER}
       password: ${env.MYSQL_TEST_PASSWORD}
    - run: mysql -uroot -h127.0.0.1 -e 'SELECT version()'
    - run: mysql -uroot -h127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS db1;'
    - run: mysql -uroot -h127.0.0.1 -e 'SHOW DATABASES;'

    # install dependencies backend dependencies
    - name: npm install , build and test
      run: |
         npm install --force
         mysql -u${{MYSQL_TEST_USER}} -p${{ env.MYSQL_TEST_PASSWORD }} -h127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS  ${{env.MYSQL_TEST_USER }};'
         mysql -uroot -h127.0.0.1 -e 'SHOW DATABASES;'
         npm test
    





